---
name: Static Check

on:
  workflow_call:

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  commitlint:
    if: github.event_name == 'pull_request'
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run commitlint
        run: |
          commit=$(gh api \
            /repos/${{ github.repository }}/pulls/${{github.event.number}}/commits \
            | jq -r '.[0].commit.message' \
            | head -n 1)
          # we can't use npx see https://github.com/conventional-changelog/commitlint/issues/613
          echo '{}' > package.json
          npm install --no-fund --no-audit @commitlint/config-conventional @commitlint/cli
          echo $commit | ./node_modules/.bin/commitlint -g .commitlintrc

  php-cs-fixer:
    name: PHP CS Fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - "8.3"
      fail-fast: false
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring, mongodb
          ini-values: memory_limit=-1
          tools: pecl, composer, php-cs-fixer
          coverage: none
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpstan:
    name: PHPStan (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ./api
    strategy:
      matrix:
        php:
          - "8.3"
      fail-fast: false
    env:
      APP_DEBUG: "1" # https://github.com/phpstan/phpstan-symfony/issues/37
      SYMFONY_PHPUNIT_VERSION: "9.5"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, mongodb
          coverage: none
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: |
          composer update --no-interaction --no-progress --ansi
      - name: Install PHPUnit
        run: vendor/bin/simple-phpunit --version
      - name: Cache PHPStan results
        uses: actions/cache@v4
        with:
          path: /tmp/phpstan
          key: phpstan-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            phpstan-php${{ matrix.php }}-
            phpstan-
        continue-on-error: true
      - name: Clear test app cache
        run: |
          bin/console cache:clear
      - name: Run PHPStan analysis
        run: |
          ./vendor/bin/phpstan --version
          ./vendor/bin/phpstan analyse --no-interaction --no-progress --ansi

  docker:
    name: Lint Docker Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
