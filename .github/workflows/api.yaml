---
name: "API Testing"

on:
  workflow_call:


env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DATABASE_URL: postgres://purus:purus@localhost/api_platform_test

defaults:
  run:
    working-directory: ./api

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8.2'
          - '8.3'
        include:
          - php: '8.2'
            coverage: true
          - php: '8.3'
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, pdo_pgsql
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Setup postgres
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER purus WITH PASSWORD 'purus' CREATEDB"
          createdb -h localhost -p 5432 -U purus purus_test
          pg_isready -d purus_test -h localhost -p 5432 -U purus
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Install PHPUnit
        run: bin/phpunit --version
      - name: Clear test app cache
        run: bin/console cache:clear --ansi --env=test
      - name: Run PHPUnit tests
        run: bin/phpunit --log-junit build/logs/phpunit/junit.xml ${{ matrix.coverage && '--coverage-clover build/logs/phpunit/clover.xml' || '' }}
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
        continue-on-error: true
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          directory: build/logs/phpunit
          name: phpunit-php${{ matrix.php }}
          flags: phpunit
          fail_ci_if_error: true
        continue-on-error: true
